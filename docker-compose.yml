services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      backend:
        ipv4_address: 192.168.2.2

  php:
    depends_on:
      - mysql
    image: felipecaue/php-laravel:1.0.0                              
    container_name: php
    restart: unless-stopped
    volumes:
      - ./laravel:/var/www/html
    networks:
      backend:
        ipv4_address: 192.168.2.3
    

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./laravel:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      backend:
        ipv4_address: 192.168.2.4

  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    environment:
      MONGODB_INITDB_ROOT_USERNAME: ${DB_MONGO_USERNAME}
      MONGODB_INITDB_ROOT_PASSWORD: ${DB_MONGO_PASSWORD}
    volumes:
      - ./mongodb:/data/db
      - ./scripts/mongodb:/docker-entrypoint-initdb.d
    networks:
      backend:
        ipv4_address: 192.168.2.5

networks:
  backend:
    name: informatizacao
    driver: bridge
    ipam:
      config: 
        - subnet: 192.168.2.0/24